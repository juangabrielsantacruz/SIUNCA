<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>