<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        h/8P9Hr/A1OVrycukfiRAAAAAElFTkSuQmCC
</value>
  </data>
</root>